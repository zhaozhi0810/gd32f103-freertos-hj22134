一. 初步版本的建立。（2022-09-05）
1. freertos  来自FreeRTOSv202012.04-LTS.zip解压
2. portable 选择ARM_CM3
3. MemMang 选择heap_4.c
4.FreeRTOSConfig.h 来自网络代码的拷贝。注意该文件中的内容。
5.因为本单片机无外部晶振，所以需要设置选择内部晶振的方式。
6.移植一个led的闪烁实验，已经成功运行。（PB4正好与调试接口有关联，需要关闭部分调试接口）




二、做了串口的移植（2022-09-09）
1。出现了两个问题，一个是串口移植总是卡死，二是增加一个任务在vTaskStartScheduler函数中报错（其实手动只创建了两个任务）
2.串口卡死的问题是因为在中断函数中进入了临界代码函数，导致卡死，不能退出（uart_debug_handle.c中有详细描述）
3.第二个问题，需要修改栈的大小configTOTAL_HEAP_SIZE ，我改为了10k。
4.现在两个问题都已经解决，串口还只有基本功能。
5.倒是有个担心，每个任务消耗的内存都不少啊，任务太多，可能内存都不够用了！！！


三、模拟iic的移植
1. 考虑iic的时序是否不能打断，则考虑每一次iic通信能否进入临界段。设置临界段后，出现一个问题，模拟iic中有延时函数，这时是应该切换任务还是继续等待
2.进入临界段（关中断taskENTER_CRITICAL()、taskEXIT_CRITICAL()），能否调用vTaskDelay，即这个函数能否正确延时并返回呢？实验证明不行！！！！直接卡死
为啥我要禁止中断呢？因为键盘会触发外部中断。
3.改禁止任务调度的方式试试，vTaskSuspendAll()，xTaskResumeAll()，能否调用vTaskDelay，即这个函数能否正确延时并返回呢？实验证明不行！！！！直接卡死
4.最后只能把之前用的裸机的延时函数（Delay1us）重新移植过来了。因为模拟iic是一个us的延时，而freertos最小是ms，而且不能禁止任务切换。
5.由于systick的初始化在vTaskStartScheduler函数中，而我在初始化串口的时候就需要用到systick的定时器，所以。。。要么把初始化改到任务函数的while1前面。。4
6.改变思路，任务有关的初始化应该放在任务的函数中！！其他无任务的初始化函数可以安排在main函数中。测试正常了。
7.任务使用（裸机时的）全局变量的方式，不利于任务的休眠，改为其他方法：比如信号量等。任务在等待信号量时阻塞休眠。
8.修改为任务通知的方式，测试暂无问题。注意中断的优先级！！！

四、想合并串口的接收和发送到一个任务中。
1.使用了任务通知的方法，但是问题是，每次通知只能对一个字符有效。通知是设置某个位。
2.解决办法，xStreamBufferBytesAvailable读出缓存的数据个数，然后使用for循环处理数据。
3.有一个问题，在串口输入的处理中，有一个打印帮助信息，由于缓存比较小，导致当执行打印帮助信息时，串口部分卡死。解决办法，把streambuff扩大到512
4.这里还有一个问题，连续输入打印，让串口打印帮助信息，导致缓存被用完卡死。xStreamBufferSend 写入发送缓存时不等待，可以解决卡死的问题。
5.合并带来的麻烦就是接收的时候不能打印，会导致打印的数据堆积起来。
6.感觉还是拆开会不会好一点？
7.改为发送中断模式，这样也能节省一个任务。发送缓存必须大一点，不然打印的内容只有一部分。
8.xStreamBufferSend(_uart_tx_StreamBuffer_Handle,&c,1,x10ms); 把等待时间改为10ms，好像可以使缓存小一点，目前调到64字节没啥问题。（32和16卡死）
